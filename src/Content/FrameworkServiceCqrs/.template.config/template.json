{
  "$schema": "http://json.schemastore.org/template",
  "author": "MASA",
  "classifications": [ "Service", "MASA", "Minimal API", "CQRS", "Web/WebAPI" ],
  "name": "ASP.NET Core CQRS with Masa Framework",
  "generatorVersions": "[0.5.0-*)",
  "description": "An CQRS project template with Masa Framework for creating an ASP.NET Core application.",
  "identity": "Masa.Framewor.Service.CQRS.Template",
  "shortName": "masafx-service-cqrs",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "MasaFrameworkServiceCqrs",
  "preferNameDirectory": true,
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(ExcludeLaunchSettings)",
          "exclude": [
            "src/MasaFrameworkServiceCqrs.Service/Properties/launchSettings.json"
          ]
        },
        {
          "condition": "(!UseProgramMain)",
          "exclude": [
            "src/MasaFrameworkServiceCqrs.Service/Program.Main.cs"
          ]
        },
        {
          "condition": "(UseProgramMain)",
          "exclude": [
            "src/MasaFrameworkServiceCqrs.Service/Program.cs"
          ],
          "rename": {
            "Program.Main.cs": "Program.cs"
          }
        },
        {
          "condition": "(NoExample)",
          "exclude": [
            "src/MasaFrameworkServiceCqrs.Contracts/Example/ExampleCreateUpdateDto.cs",
            "src/MasaFrameworkServiceCqrs.Contracts/Example/ExampleGetListDto.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/Commands/CreateExampleCommand.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/Commands/DeleteExampleCommand.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/Commands/UpdateExampleCommand.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/Queries/ExampleGetListQuery.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/ExampleCommandHandler.cs",
            "src/MasaFrameworkServiceCqrs.Service/Application/Example/ExampleQueryHandler.cs",
            "src/MasaFrameworkServiceCqrs.Service/DataAccess/Example/Entities/readme.txt",
            "src/MasaFrameworkServiceCqrs.Service/Services/ExampleService.cs"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "ExcludeLaunchSettings": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to exclude launchSettings.json from the generated template."
    },
    "kestrelHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },
    "kestrelHttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 5300
      }
    },
    "kestrelHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpPort",
        "fallbackVariableName": "kestrelHttpPortGenerated"
      },
      "replaces": "5000"
    },
    "kestrelHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualAuth or OrganizationalAuth is used)."
    },
    "kestrelHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 7000,
        "high": 7300
      }
    },
    "kestrelHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpsPort",
        "fallbackVariableName": "kestrelHttpsPortGenerated"
      },
      "replaces": "5001"
    },
    "iisHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },
    "iisHttpPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "iisHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpPort",
        "fallbackVariableName": "iisHttpPortGenerated"
      },
      "replaces": "8080"
    },
    "iisHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualAuth or OrganizationalAuth is used)."
    },
    "iisHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },
    "iisHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpsPort",
        "fallbackVariableName": "iisHttpsPortGenerated"
      },
      "replaces": "44300"
    },
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net8.0",
          "description": "Target net8.0"
        },
        {
          "choice": "net7.0",
          "description": "Target net7.0"
        },
        {
          "choice": "net6.0",
          "description": "Target net6.0"
        }
      ],
      "replaces": "net6.0",
      "defaultValue": "net6.0"
    },
    "copyrightYear": {
      "type": "generated",
      "generator": "now",
      "replaces": "copyrightYear",
      "parameters": {
        "format": "yyyy"
      }
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "HasHttpsProfile": {
      "type": "computed",
      "value": "(!NoHttps)"
    },
    "NoHttps": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to turn off HTTPS. This option only applies if Individual, IndividualB2C, SingleOrg, or MultiOrg aren't used for --auth."
    },
    "UseProgramMain": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Do not use _top-level statements",
      "description": "Whether to generate an explicit Program class and Main method instead of top-level statements."
    },
    "UseSwagger": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Whether to use swagger documentation."
    },
    "NoExample": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether an example is not required."
    },
    "DataBase": {
      "type": "parameter",
      "description": "The database used by the project",
      "datatype": "choice",
      "choices": [
        {
          "choice": "mssql",
          "description": "use sqlserver database"
        },
        {
          "choice": "sqlite",
          "description": "use sqlite database"
        },
        {
          "choice": "cosmos",
          "description": "use cosmos database"
        },
        {
          "choice": "postgresql",
          "description": "use postgresql database"
        },
        {
          "choice": "pomelo.mysql",
          "description": "Use mysql database with Pomelo.EntityFrameworkCore.MySql drive"
        },
        {
          "choice": "mysql",
          "description": "Use mysql database"
        },
        {
          "choice": "memory",
          "description": "Use memory database"
        },
        {
          "choice": "oracle",
          "description": "Use oracle database"
        }
      ],
      "defaultValue": "mssql"
    },
    "HasMSSQL": {
      "type": "computed",
      "value": "(DataBase == \"mssql\")"
    },
    "HasSqlite": {
      "type": "computed",
      "value": "(DataBase == \"sqlite\")"
    },
    "HasCosmos": {
      "type": "computed",
      "value": "(DataBase == \"cosmos\")"
    },
    "HasPostgreSql": {
      "type": "computed",
      "value": "(DataBase == \"postgresql\")"
    },
    "HasPomeloMySql": {
      "type": "computed",
      "value": "(DataBase == \"pomelo.mysql\")"
    },
    "HasMySql": {
      "type": "computed",
      "value": "(DataBase == \"mysql\")"
    },
    "HasMemory": {
      "type": "computed",
      "value": "(DataBase == \"memory\")"
    },
    "HasOracle": {
      "type": "computed",
      "value": "(DataBase == \"oracle\")"
    }
  },
  "primaryOutputs": [
    {
      "path": "MasaFrameworkServiceCqrs.sln"
    }
  ],
  "defaultName": "MasaWebApplication",
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}
